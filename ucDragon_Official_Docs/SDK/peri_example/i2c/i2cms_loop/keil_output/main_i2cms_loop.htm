<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\keil_output\main_i2cms_loop.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\keil_output\main_i2cms_loop.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Tue May 17 14:19:45 2016
<BR><P>
<H3>Maximum Stack Usage =         92 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; setupI2CMaster &rArr; Chip_I2CM_SetBusSpeed &rArr; Chip_Clock_GetSystemClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate &rArr; __aeabi_uidivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[17]">ADC_OVR_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">ADC_OVR_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[17]">ADC_OVR_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[14]">ADC_SEQA_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[15]">ADC_SEQB_IRQHanlder</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[16]">ADC_THCMP_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[11]">BOD_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[f]">CMP_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[18]">DMA_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[12]">FLASH_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[c]">I2C0_IRQHandler</a> from main_i2cms_loop.o(i.I2C0_IRQHandler) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[b]">I2C1_IRQHandler</a> from main_i2cms_loop.o(i.I2C1_IRQHandler) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[19]">I2C2_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[1a]">I2C3_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[e]">MRT_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[1b]">PIN_INT0_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[1c]">PIN_INT1_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[1d]">PIN_INT2_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[1e]">PIN_INT3_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[1f]">PIN_INT4_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[20]">PIN_INT5_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[21]">PIN_INT6_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[22]">PIN_INT7_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[d]">SCT_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[6]">SPI0_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[7]">SPI1_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[24]">SystemInit</a> from sysinit_8xx.o(i.SystemInit) referenced from keil_startup_lpc82x.o(.text)
 <LI><a href="#[8]">UART0_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[9]">UART1_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[a]">UART2_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[10]">WDT_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[13]">WKT_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[25]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from keil_startup_lpc82x.o(.text)
 <LI><a href="#[23]">main</a> from main_i2cms_loop.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[29]">processSlaveTransferDone</a> from main_i2cms_loop.o(i.processSlaveTransferDone) referenced from main_i2cms_loop.o(.constdata)
 <LI><a href="#[28]">processSlaveTransferRecv</a> from main_i2cms_loop.o(i.processSlaveTransferRecv) referenced from main_i2cms_loop.o(.constdata)
 <LI><a href="#[27]">processSlaveTransferSend</a> from main_i2cms_loop.o(i.processSlaveTransferSend) referenced from main_i2cms_loop.o(.constdata)
 <LI><a href="#[26]">processSlaveTransferStart</a> from main_i2cms_loop.o(i.processSlaveTransferStart) referenced from main_i2cms_loop.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[25]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(.text)
</UL>
<P><STRONG><a name="[5c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[5d]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[5e]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[5f]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[60]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[61]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>ADC_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_OVR_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_OVR_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>ADC_SEQA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>ADC_SEQB_IRQHanlder</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>ADC_THCMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>CMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>MRT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>PIN_INT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>PIN_INT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>PIN_INT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>PIN_INT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>PIN_INT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>PIN_INT5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>PIN_INT6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>PIN_INT7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>SCT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>WKT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemClockRate
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuf_Write1Byte
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuf_Read1Byte
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_SetBusSpeed
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetWDTLFORate
</UL>

<P><STRONG><a name="[2b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[63]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>Board_LED_Toggle</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, board.o(i.Board_LED_Toggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Board_LED_Toggle
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d]"></a>Chip_Clock_GetMainClockRate</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, clock_8xx.o(i.Chip_Clock_GetMainClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetWDTOSCRate
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutClockRate
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLInClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemClockRate
</UL>

<P><STRONG><a name="[31]"></a>Chip_Clock_GetSystemClockRate</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, clock_8xx.o(i.Chip_Clock_GetSystemClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Chip_Clock_GetSystemClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_SetBusSpeed
</UL>

<P><STRONG><a name="[2e]"></a>Chip_Clock_GetSystemPLLInClockRate</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, clock_8xx.o(i.Chip_Clock_GetSystemPLLInClockRate))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutClockRate
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
</UL>

<P><STRONG><a name="[30]"></a>Chip_Clock_GetSystemPLLOutClockRate</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, clock_8xx.o(i.Chip_Clock_GetSystemPLLOutClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_Clock_GetSystemPLLOutClockRate
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLInClockRate
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetPLLFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
</UL>

<P><STRONG><a name="[2f]"></a>Chip_Clock_GetWDTOSCRate</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, clock_8xx.o(i.Chip_Clock_GetWDTOSCRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetWDTLFORate
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
</UL>

<P><STRONG><a name="[45]"></a>Chip_Clock_SetMainClockSource</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, clock_8xx.o(i.Chip_Clock_SetMainClockSource))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupXtalClocking
</UL>

<P><STRONG><a name="[41]"></a>Chip_Clock_SetPLLBypass</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, clock_8xx.o(i.Chip_Clock_SetPLLBypass))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupXtalClocking
</UL>

<P><STRONG><a name="[43]"></a>Chip_Clock_SetSystemPLLSource</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, clock_8xx.o(i.Chip_Clock_SetSystemPLLSource))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupXtalClocking
</UL>

<P><STRONG><a name="[35]"></a>Chip_I2CM_SetBusSpeed</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, i2c_8xx.o(i.Chip_I2CM_SetBusSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Chip_I2CM_SetBusSpeed &rArr; Chip_Clock_GetSystemClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemClockRate
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_SetDutyCycle
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupI2CMaster
</UL>

<P><STRONG><a name="[37]"></a>Chip_I2CM_Xfer</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, i2c_8xx.o(i.Chip_I2CM_Xfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chip_I2CM_Xfer
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_WriteByte
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_ClearStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupXferRecAndExecute
</UL>

<P><STRONG><a name="[3a]"></a>Chip_I2CM_XferHandler</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, i2c_8xx.o(i.Chip_I2CM_XferHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Chip_I2CM_XferHandler &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_WriteByte
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_SendStop
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_ClearStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler
</UL>

<P><STRONG><a name="[47]"></a>Chip_I2CS_XferHandler</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, i2c_8xx.o(i.Chip_I2CS_XferHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Chip_I2CS_XferHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_IRQHandler
</UL>

<P><STRONG><a name="[3d]"></a>Chip_I2C_Init</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, i2c_8xx.o(i.Chip_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chip_I2C_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetResetID
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetClockID
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupI2CSlave
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupI2CMaster
</UL>

<P><STRONG><a name="[4b]"></a>Chip_IOCON_PinSetI2CMode</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, ioswm_8xx.o(i.Chip_IOCON_PinSetI2CMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Chip_IOCON_PinSetI2CMode
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_I2C_PinMux
</UL>

<P><STRONG><a name="[4a]"></a>Chip_SWM_MovablePinAssign</STRONG> (Thumb, 40 bytes, Stack size 20 bytes, ioswm_8xx.o(i.Chip_SWM_MovablePinAssign))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Chip_SWM_MovablePinAssign
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_I2C_PinMux
</UL>

<P><STRONG><a name="[44]"></a>Chip_SYSCTL_PowerDown</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, syscon_8xx.o(i.Chip_SYSCTL_PowerDown))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupXtalClocking
</UL>

<P><STRONG><a name="[42]"></a>Chip_SYSCTL_PowerUp</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, syscon_8xx.o(i.Chip_SYSCTL_PowerUp))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupXtalClocking
</UL>

<P><STRONG><a name="[40]"></a>Chip_SetupXtalClocking</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, sysinit_8xx.o(i.Chip_SetupXtalClocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_SetupXtalClocking
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCTL_PowerUp
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCTL_PowerDown
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetSystemPLLSource
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetPLLBypass
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetMainClockSource
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[c]"></a>I2C0_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, main_i2cms_loop.o(i.I2C0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C0_IRQHandler &rArr; Chip_I2CM_XferHandler &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_XferHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>I2C1_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, main_i2cms_loop.o(i.I2C1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C1_IRQHandler &rArr; Chip_I2CS_XferHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CS_XferHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2C_GetPendingInt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>RingBuf_Init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ring_buffer.o(i.RingBuf_Init))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4c]"></a>RingBuf_Read1Byte</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, ring_buffer.o(i.RingBuf_Read1Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RingBuf_Read1Byte &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processSlaveTransferSend
</UL>

<P><STRONG><a name="[4f]"></a>RingBuf_Write1Byte</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, ring_buffer.o(i.RingBuf_Write1Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RingBuf_Write1Byte &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processSlaveTransferRecv
</UL>

<P><STRONG><a name="[53]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, clock_8xx.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SystemCoreClockUpdate &rArr; Chip_Clock_GetSystemClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24]"></a>SystemInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, sysinit_8xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; Chip_SetupXtalClocking
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupXtalClocking
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(.text)
</UL>
<P><STRONG><a name="[3b]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, i2c_8xx.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_XferHandler
</UL>

<P><STRONG><a name="[64]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[65]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[66]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[23]"></a>main</STRONG> (Thumb, 234 bytes, Stack size 8 bytes, main_i2cms_loop.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = main &rArr; setupI2CMaster &rArr; Chip_I2CM_SetBusSpeed &rArr; Chip_Clock_GetSystemClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuf_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_LED_Toggle
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupI2CSlave
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupI2CMaster
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupXferRecAndExecute
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_I2C_PinMux
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_PinSetState
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_PinSetDIR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[55]"></a>Chip_GPIO_PinSetDIR</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, main_i2cms_loop.o(i.Chip_GPIO_PinSetDIR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chip_GPIO_PinSetDIR
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>Chip_GPIO_PinSetState</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main_i2cms_loop.o(i.Chip_GPIO_PinSetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_GPIO_PinSetState
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>Chip_I2C_EnableInt</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main_i2cms_loop.o(i.Chip_I2C_EnableInt))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupI2CSlave
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupXferRecAndExecute
</UL>

<P><STRONG><a name="[46]"></a>Chip_I2C_GetPendingInt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main_i2cms_loop.o(i.Chip_I2C_GetPendingInt))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_IRQHandler
</UL>

<P><STRONG><a name="[49]"></a>Chip_SWM_EnableFixedPin</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, main_i2cms_loop.o(i.Chip_SWM_EnableFixedPin))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_I2C_PinMux
</UL>

<P><STRONG><a name="[48]"></a>Init_I2C_PinMux</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, main_i2cms_loop.o(i.Init_I2C_PinMux))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Init_I2C_PinMux &rArr; Chip_SWM_MovablePinAssign
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SWM_MovablePinAssign
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_IOCON_PinSetI2CMode
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SWM_EnableFixedPin
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[59]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main_i2cms_loop.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, main_i2cms_loop.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>SetupXferRecAndExecute</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, main_i2cms_loop.o(i.SetupXferRecAndExecute))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SetupXferRecAndExecute &rArr; Chip_I2CM_Xfer
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_Xfer
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForI2cXferComplete
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2C_EnableInt
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>WaitForI2cXferComplete</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main_i2cms_loop.o(i.WaitForI2cXferComplete))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupXferRecAndExecute
</UL>

<P><STRONG><a name="[29]"></a>processSlaveTransferDone</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main_i2cms_loop.o(i.processSlaveTransferDone))
<BR>[Address Reference Count : 1]<UL><LI> main_i2cms_loop.o(.constdata)
</UL>
<P><STRONG><a name="[28]"></a>processSlaveTransferRecv</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main_i2cms_loop.o(i.processSlaveTransferRecv))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = processSlaveTransferRecv &rArr; RingBuf_Write1Byte &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuf_Write1Byte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_i2cms_loop.o(.constdata)
</UL>
<P><STRONG><a name="[27]"></a>processSlaveTransferSend</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, main_i2cms_loop.o(i.processSlaveTransferSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = processSlaveTransferSend &rArr; RingBuf_Read1Byte &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuf_Read1Byte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_i2cms_loop.o(.constdata)
</UL>
<P><STRONG><a name="[26]"></a>processSlaveTransferStart</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main_i2cms_loop.o(i.processSlaveTransferStart))
<BR>[Address Reference Count : 1]<UL><LI> main_i2cms_loop.o(.constdata)
</UL>
<P><STRONG><a name="[57]"></a>setupI2CMaster</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, main_i2cms_loop.o(i.setupI2CMaster))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = setupI2CMaster &rArr; Chip_I2CM_SetBusSpeed &rArr; Chip_Clock_GetSystemClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2C_Init
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_SetBusSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>setupI2CSlave</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, main_i2cms_loop.o(i.setupI2CSlave))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = setupI2CSlave &rArr; Chip_I2C_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2C_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2C_EnableInt
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>__get_PRIMASK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ring_buffer.o(i.__get_PRIMASK))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuf_Write1Byte
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuf_Read1Byte
</UL>

<P><STRONG><a name="[4e]"></a>__set_PRIMASK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ring_buffer.o(i.__set_PRIMASK))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuf_Write1Byte
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingBuf_Read1Byte
</UL>

<P><STRONG><a name="[38]"></a>Chip_I2CM_ClearStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, i2c_8xx.o(i.Chip_I2CM_ClearStatus))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_XferHandler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_Xfer
</UL>

<P><STRONG><a name="[3c]"></a>Chip_I2CM_SendStop</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, i2c_8xx.o(i.Chip_I2CM_SendStop))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_XferHandler
</UL>

<P><STRONG><a name="[36]"></a>Chip_I2CM_SetDutyCycle</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, i2c_8xx.o(i.Chip_I2CM_SetDutyCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_I2CM_SetDutyCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_SetBusSpeed
</UL>

<P><STRONG><a name="[39]"></a>Chip_I2CM_WriteByte</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, i2c_8xx.o(i.Chip_I2CM_WriteByte))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_XferHandler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_Xfer
</UL>

<P><STRONG><a name="[3e]"></a>I2C_GetClockID</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, i2c_8xx.o(i.I2C_GetClockID))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2C_Init
</UL>

<P><STRONG><a name="[3f]"></a>I2C_GetResetID</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, i2c_8xx.o(i.I2C_GetResetID))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2C_Init
</UL>

<P><STRONG><a name="[33]"></a>Chip_Clock_GetPLLFreq</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clock_8xx.o(i.Chip_Clock_GetPLLFreq))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutClockRate
</UL>

<P><STRONG><a name="[34]"></a>Chip_Clock_GetWDTLFORate</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, clock_8xx.o(i.Chip_Clock_GetWDTLFORate))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Chip_Clock_GetWDTLFORate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetWDTOSCRate
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
